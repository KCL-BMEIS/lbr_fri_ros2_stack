cmake_minimum_required(VERSION 3.16)
project(lbr_fri_ros2)

if(CMAKE_COMPILER_IS_GNUCXX OR CMAKE_CXX_COMPILER_ID MATCHES "Clang")
  add_compile_options(-Wall -Wextra -Wpedantic)
endif()

# find dependencies
find_package(ament_cmake REQUIRED)
find_package(ament_cmake_python REQUIRED)
find_package(control_toolbox REQUIRED)
find_package(fri REQUIRED)
find_package(lbr_fri_msgs REQUIRED)
find_package(rclcpp REQUIRED)
find_package(rclcpp_components REQUIRED)
find_package(urdf REQUIRED)

# lbr_fri_ros2
add_library(lbr_fri_ros2
  SHARED
    src/lbr_app.cpp
    src/lbr_client.cpp
    src/lbr_command_guard.cpp
)

target_include_directories(lbr_fri_ros2
  PUBLIC
    $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/include>
    $<INSTALL_INTERFACE:include>
)

ament_target_dependencies(lbr_fri_ros2
  control_toolbox
  fri
  lbr_fri_msgs
  rclcpp
  urdf
)

ament_export_targets(lbr_fri_ros2_export HAS_LIBRARY_TARGET)
ament_export_dependencies(
  control_toolbox
  fri
  lbr_fri_msgs
  rclcpp
  urdf
)

install(
  DIRECTORY include/
  DESTINATION include
)

install(
  TARGETS lbr_fri_ros2
  EXPORT lbr_fri_ros2_export
  LIBRARY DESTINATION lib
)

install(
  DIRECTORY launch
  DESTINATION share/lbr_fri_ros2
)

# lbr_app_component
add_library(lbr_app_component
  SHARED
    src/lbr_app_component.cpp
)

target_include_directories(lbr_app_component
  PRIVATE src
)

target_link_libraries(lbr_app_component
  lbr_fri_ros2
)

ament_target_dependencies(lbr_app_component
  rclcpp
  rclcpp_components
)

rclcpp_components_register_node(lbr_app_component
  PLUGIN lbr_fri_ros2::LBRAppComponent
  EXECUTABLE lbr_app
)

install(
  TARGETS lbr_app_component
  LIBRARY DESTINATION lib
  RUNTIME DESTINATION lib/lbr_fri_ros2
)

install(
  DIRECTORY launch
  DESTINATION share/lbr_fri_ros2
)

# Launch mixins
ament_python_install_package(${PROJECT_NAME})

ament_package()
